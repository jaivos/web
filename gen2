#!/bin/ksh

set -euo pipefail

WEB_ROOT="/var/www/htdocs/jaivo.test/web"
HEADER_FILE="header"
FOOTER_FILE="footer"

# Ensure required files exist
for file in "$HEADER_FILE" "$FOOTER_FILE"; do
    if [ ! -f "$WEB_ROOT/$file" ]; then
        echo "Error: Required file '$file' not found in $WEB_ROOT" >&2
        exit 2
    fi
done

generate_html() {
    local md_file="$1"
    local base_file title tag mdate
    base_file=$(basename "$md_file" .md)

    # Extract metadata safely
    title=$(awk -F: 'NR==1{gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2}' "$md_file")
    tag=$(awk -F: 'NR==2{gsub(/^[ \t]+|[ \t]+$/, "", $2); print $2}' "$md_file")

    if [ -z "$title" ] || [ -z "$tag" ]; then
        echo "Warning: $md_file is missing title or tag metadata -- skipping." >&2
        return
    fi

    # Format mdate in a readable and portable way
    if mdate=$(stat -c '%Y' "$md_file" 2>/dev/null); then
        mdate=$(date -d @"$mdate" '+%Y-%m-%d %H:%M')
    else
        # BSD/macOS fallback
        mdate=$(stat -f '%m' "$md_file" 2>/dev/null || echo "unknown")
        mdate=$(date -r "$mdate" '+%Y-%m-%d %H:%M' 2>/dev/null || echo "$mdate")
    fi

    # Prepare temp files, ensure cleanup
    tmp_txt=$(mktemp)
    tmp_html=$(mktemp)
    trap 'rm -f "$tmp_txt" "$tmp_html"' EXIT

    # Preprocess markdown with metadata
    sed "s/\$mdate/$mdate/g" "$md_file" > "$tmp_txt"

    # Render markdown to HTML (ensure lowdown exists)
    if ! command -v lowdown >/dev/null 2>&1; then
        echo "Error: 'lowdown' is not installed." >&2
        exit 3
    fi
    lowdown -o "$tmp_html" "$tmp_txt"

    # Build final HTML file
    {
        cat "$WEB_ROOT/$HEADER_FILE"
        cat "$tmp_html"
        cat "$WEB_ROOT/$FOOTER_FILE"
    } > "$WEB_ROOT/$base_file.html"

    # Replace template variables in HTML
    sed -i \
        -e "s|\$title|$title|g" \
        -e "s|\$mdate|$mdate|g" \
        -e "s|\$tag|<span class=\"tag\">$tag</span>|g" \
        -e "s|\$text_version|$base_file.md|g" \
        "$WEB_ROOT/$base_file.html"

    echo "Generated: $WEB_ROOT/$base_file.html"

    # Cleanup
    rm -f "$tmp_txt" "$tmp_html"
    trap - EXIT
}

cd "$WEB_ROOT" || exit 1

for md in *.md; do
    [ -e "$md" ] || continue
    generate_html "$md" || echo "Error processing $md" >&2
done

gu update
